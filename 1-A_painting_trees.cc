/*
Вася и Маша участвуют в субботнике и красят стволы деревьев в белый цвет. 
Деревья растут вдоль улицы через равные промежутки в 1 метр. 
Одно из деревьев обозначено числом ноль, деревья по одну сторону занумерованы положительными числами 
1,2 и т.д., а в другую — отрицательными −1,−2 и т.д.
Ведро с краской для Васи установили возле дерева 
P , а для Маши — возле дерева Q. Ведра с краской очень тяжелые и Вася с Машей не могут их переставить, 
поэтому они окунают кисть в ведро и уже с этой кистью идут красить дерево. Краска на кисти из ведра Васи засыхает, 
когда он удаляется от ведра более чем на V метров, а из ведра Маши — на M метров. 

Определите, сколько деревьев может быть покрашено.

Формат ввода
В первой строке содержится два целых числа P и V — номер дерева, у которого стоит ведро Васи и на сколько деревьев он может от него удаляться.
В второй строке содержится два целых числа Q и M — аналогичные данные для Маши.
Все числа целые и по модулю не превосходят 10^8.

Формат вывода
Выведите одно число — количество деревьев, которые могут быть покрашены.
Пример
Ввод	        Вывод
0 7             25
12 5
*/

#include <iostream>
#include <algorithm>

int main () {
    int p,v,q,m;
    std::cin >> p >> v;
    std::cin >> q >> m;
    int right_max = std::max(p+v,q+m);
    int left_min = std::min(p-v,q-m);
    int right_min = std::min(p+v,q+m);
    int left_max = std::max(p-v,q-m);
    int trees = 0;
    if (right_min < left_max) {
        // std::cout << "Not intersect!";
        // std::cout << left_min << " " << right_max << " " << right_min << " " << left_max << std::endl;
        std::cout << (right_max - left_min + 1) - (abs(right_min - left_max + 1)) << std::endl;
        trees = (right_max - left_min + 1) - (abs(right_min - left_max + 1));
    }
    else {
        // std::cout << left_min << " " << right_max << " " << right_min << " " << left_max << std::endl;
        std::cout << right_max - left_min + 1 << std::endl;
        trees = right_max - left_min + 1;
    }
    return trees;
}
