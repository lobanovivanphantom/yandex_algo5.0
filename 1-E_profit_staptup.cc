/*
k  друзей организовали стартап по производству укулеле для кошек. На сегодняшний день прибыль составила n рублей. 
Вы, как главный бухгалтер компании, хотите в каждый из ближайших d дней приписывать по одной цифре в конец числа, выражающего прибыль. 
При этом в каждый из дней прибыль должна делиться на k.
Формат ввода
В единственной строке входных данных через пробел записаны три числа: n,k,d — изначальная прибыль, количество учредителей компании и количество дней, 
которое вы собираетесь следить за прибылью (1≤n,k≤10^9,1≤d≤10^5). НЕ гарантируется, что n делится на k.

Формат вывода
Выведите одно целое число x — прибыль компании через d дней. Первые цифры числа x должны совпадать с числом n. 
Все префиксы числа x, которые длиннее числа n на 1,2,…,d цифр, должны делиться на k. 
Если возможных ответов несколько, выведите любой из них. Если ответа не существует, выведите −1.

Пример 1
Ввод	                Вывод
21 108 1                216

Пример 2
Ввод	                Вывод
5 12 4                  -1

Пример 3
Ввод	                            Вывод
294209208 98069736 69929            Большое число, поэтому вывод через строку

Примечания
В первом тестовом примере всего один день нужно следить за прибылью. Можно дописать цифру 6 в конец числа 21 и получить прибыль, делящуюся на 108.
Во втором тестовом примере мы в первый же день не можем получить прибыль, делящуюся на k, какая бы цифра не была дописана у числу n, поэтому ответа не существует.
*/

#include <iostream>
#include <string>


int main () {
    int money_now,friends,day;
    std::cin >> money_now >> friends >> day;
    std::string money;  
        bool found = false; 
        for (int j = 0; j <= 9;++j) {
            if ((money_now * 10 + j) % friends == 0) {
                money = std::to_string(money_now) + std::to_string(j);
                found = true;
                break;
            }
        }
        money.append(day - 1, '0');
        if (!found) {
            std::cout << -1 << std::endl;
            return 0;
        }
    std::cout << money << std::endl;
    return 0;
}
